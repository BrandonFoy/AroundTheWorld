{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Crash\\\\OneDrive\\\\Desktop\\\\AroundTheWorld\\\\frontend\\\\src\\\\containers\\\\Places.jsx\",\n    _s = $RefreshSig$();\n\nimport Footer from \"../components/common/Footer\";\nimport PlacesHeader from \"../components/common/PlacesHeader\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport queryString from \"query-string\";\nimport Card from \"../components/common/Card\";\nimport { fetchPlaces } from \"../reducks/places/operations\";\nimport { getPlaces } from \"../reducks/places/selectors\";\nimport { fetchFromLocalStorage } from \"../reducks/favorites/operations\";\nimport { getCategories } from \"../reducks/categories/selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Places = () => {\n  _s();\n\n  const parsed = queryString.parse(window.location.search);\n  const [search, setSearch] = useState(null);\n  const [category, setCategory] = useState([]);\n  const dispatch = useDispatch();\n  const selector = useSelector(state => state);\n  const places = getPlaces(selector);\n  console.log(places);\n  useEffect(() => {\n    dispatch(fetchFromLocalStorage());\n\n    if (parsed.search !== undefined) {\n      setSearch(parsed.search);\n    }\n\n    if (parsed.category !== undefined) {\n      setCategory(parsed.category);\n    }\n  });\n  const categories = getCategories(selector);\n  useEffect(() => {\n    if (search != null || category != null) {\n      dispatch(fetchPlaces(search, category));\n    }\n  }, [search, category, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PlacesHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"places-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"place-heading\",\n        children: \"Places To Visit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"places-items\",\n        children: places.map(place => /*#__PURE__*/_jsxDEV(Card, {\n          place: place\n        }, place.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Places, \"YIUIt8xOJIqUMgtV+iQFgdxMWYM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Places;\nexport default Places;\n\nvar _c;\n\n$RefreshReg$(_c, \"Places\");","map":{"version":3,"sources":["C:/Users/Crash/OneDrive/Desktop/AroundTheWorld/frontend/src/containers/Places.jsx"],"names":["Footer","PlacesHeader","React","useEffect","useState","useDispatch","useSelector","queryString","Card","fetchPlaces","getPlaces","fetchFromLocalStorage","getCategories","Places","parsed","parse","window","location","search","setSearch","category","setCategory","dispatch","selector","state","places","console","log","undefined","categories","map","place","id"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,6BAAnB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,qBAAT,QAAsC,iCAAtC;AACA,SAASC,aAAT,QAA8B,iCAA9B;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,MAAM,GAAGP,WAAW,CAACQ,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAf;AACA,QAAM,CAACA,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMkB,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,QAAQ,GAAGjB,WAAW,CAAEkB,KAAD,IAAWA,KAAZ,CAA5B;AACA,QAAMC,MAAM,GAAGf,SAAS,CAACa,QAAD,CAAxB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAtB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;;AAEA,QAAIG,MAAM,CAACI,MAAP,KAAkBU,SAAtB,EAAiC;AAC/BT,MAAAA,SAAS,CAACL,MAAM,CAACI,MAAR,CAAT;AACD;;AACD,QAAIJ,MAAM,CAACM,QAAP,KAAoBQ,SAAxB,EAAmC;AACjCP,MAAAA,WAAW,CAACP,MAAM,CAACM,QAAR,CAAX;AACD;AACF,GATQ,CAAT;AAUA,QAAMS,UAAU,GAAGjB,aAAa,CAACW,QAAD,CAAhC;AACApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,MAAM,IAAI,IAAV,IAAkBE,QAAQ,IAAI,IAAlC,EAAwC;AACtCE,MAAAA,QAAQ,CAACb,WAAW,CAACS,MAAD,EAASE,QAAT,CAAZ,CAAR;AACD;AACF,GAJQ,EAIN,CAACF,MAAD,EAASE,QAAT,EAAmBE,QAAnB,CAJM,CAAT;AAKA,sBACE;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAS,MAAA,SAAS,EAAC,kBAAnB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBACGG,MAAM,CAACK,GAAP,CAAYC,KAAD,iBACV,QAAC,IAAD;AAAqB,UAAA,KAAK,EAAEA;AAA5B,WAAWA,KAAK,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAcD,CAtCD;;GAAMnB,M;UAIaR,W,EACAC,W;;;KALbO,M;AAwCN,eAAeA,MAAf","sourcesContent":["import Footer from \"../components/common/Footer\";\r\nimport PlacesHeader from \"../components/common/PlacesHeader\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport queryString from \"query-string\";\r\nimport Card from \"../components/common/Card\";\r\nimport { fetchPlaces } from \"../reducks/places/operations\";\r\nimport { getPlaces } from \"../reducks/places/selectors\";\r\nimport { fetchFromLocalStorage } from \"../reducks/favorites/operations\";\r\nimport { getCategories } from \"../reducks/categories/selectors\";\r\n\r\nconst Places = () => {\r\n  const parsed = queryString.parse(window.location.search);\r\n  const [search, setSearch] = useState(null);\r\n  const [category, setCategory] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const selector = useSelector((state) => state);\r\n  const places = getPlaces(selector);\r\n  console.log(places);\r\n  useEffect(() => {\r\n    dispatch(fetchFromLocalStorage());\r\n\r\n    if (parsed.search !== undefined) {\r\n      setSearch(parsed.search);\r\n    }\r\n    if (parsed.category !== undefined) {\r\n      setCategory(parsed.category);\r\n    }\r\n  },);\r\n  const categories = getCategories(selector);\r\n  useEffect(() => {\r\n    if (search != null || category != null) {\r\n      dispatch(fetchPlaces(search, category));\r\n    }\r\n  }, [search, category, dispatch]);\r\n  return (\r\n    <>\r\n      <PlacesHeader />\r\n      <section className=\"places-container\">\r\n        <h2 className=\"place-heading\">Places To Visit</h2>\r\n        <div className=\"places-items\">\r\n          {places.map((place) => (\r\n            <Card key={place.id} place={place} />\r\n          ))}\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Places;"]},"metadata":{},"sourceType":"module"}