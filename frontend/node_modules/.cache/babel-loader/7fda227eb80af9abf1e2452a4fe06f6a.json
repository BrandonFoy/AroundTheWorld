{"ast":null,"code":"// import Footer from \"../components/common/Footer\";\n// import PlacesHeader from \"../components/common/PlacesHeader\";\n// import React, { useEffect, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import queryString from \"query-string\";\n// import Card from \"../components/common/Card\";\n// import { fetchPlaces } from \"../reducks/places/operations\";\n// import { getPlaces } from \"../reducks/places/selectors\";\n// import { fetchFromLocalStorage } from \"../reducks/favorites/operations\";\n// import { getCategories } from \"../reducks/categories/selectors\";\n\n// const Places = () => {\n//   const parsed = queryString.parse(window.location.search);\n//   const [search, setSearch] = useState(null);\n//   const [category, setCategory] = useState([]);\n//   const dispatch = useDispatch();\n//   const selector = useSelector((state) => state);\n//   const places = getPlaces(selector);\n//   console.log(places);\n//   useEffect(() => {\n//     dispatch(fetchFromLocalStorage());\n\n//     if (parsed.search !== undefined) {\n//       setSearch(parsed.search);\n//     }\n//     if (parsed.category !== undefined) {\n//       setCategory(parsed.category);\n//     }\n//   }, []);\n//   const categories = getCategories(selector);\n//   useEffect(() => {\n//     if (search != null || category != null) {\n//       dispatch(fetchPlaces(search, category));\n//     }\n//   }, [search, category]);\n//   return (\n//     <>\n//       <PlacesHeader />\n//       <section class=\"places-container\">\n//         <h2 className=\"place-heading\">Places To Visit</h2>\n//         <div class=\"places-items\">\n//           {places.map((place) => (\n//             <Card key={place.id} place={place} />\n//           ))}\n//         </div>\n//       </section>\n//       <Footer />\n//     </>\n//   );\n// };\n\n// export default Places;","map":{"version":3,"names":[],"sources":["C:/Users/Crash/OneDrive/Desktop/AroundTheWorld/frontend/src/containers/Places.jsx"],"sourcesContent":["// import Footer from \"../components/common/Footer\";\r\n// import PlacesHeader from \"../components/common/PlacesHeader\";\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import queryString from \"query-string\";\r\n// import Card from \"../components/common/Card\";\r\n// import { fetchPlaces } from \"../reducks/places/operations\";\r\n// import { getPlaces } from \"../reducks/places/selectors\";\r\n// import { fetchFromLocalStorage } from \"../reducks/favorites/operations\";\r\n// import { getCategories } from \"../reducks/categories/selectors\";\r\n\r\n// const Places = () => {\r\n//   const parsed = queryString.parse(window.location.search);\r\n//   const [search, setSearch] = useState(null);\r\n//   const [category, setCategory] = useState([]);\r\n//   const dispatch = useDispatch();\r\n//   const selector = useSelector((state) => state);\r\n//   const places = getPlaces(selector);\r\n//   console.log(places);\r\n//   useEffect(() => {\r\n//     dispatch(fetchFromLocalStorage());\r\n\r\n//     if (parsed.search !== undefined) {\r\n//       setSearch(parsed.search);\r\n//     }\r\n//     if (parsed.category !== undefined) {\r\n//       setCategory(parsed.category);\r\n//     }\r\n//   }, []);\r\n//   const categories = getCategories(selector);\r\n//   useEffect(() => {\r\n//     if (search != null || category != null) {\r\n//       dispatch(fetchPlaces(search, category));\r\n//     }\r\n//   }, [search, category]);\r\n//   return (\r\n//     <>\r\n//       <PlacesHeader />\r\n//       <section class=\"places-container\">\r\n//         <h2 className=\"place-heading\">Places To Visit</h2>\r\n//         <div class=\"places-items\">\r\n//           {places.map((place) => (\r\n//             <Card key={place.id} place={place} />\r\n//           ))}\r\n//         </div>\r\n//       </section>\r\n//       <Footer />\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Places;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}